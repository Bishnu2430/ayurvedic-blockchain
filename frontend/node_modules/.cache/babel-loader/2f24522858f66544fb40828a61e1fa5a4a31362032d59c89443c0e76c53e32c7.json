{"ast":null,"code":"var _jsxFileName = \"/home/bishnu/ayurvedic-blockchain/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on app start\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        api.setAuthToken(token);\n        const response = await api.get(\"/users/profile\");\n        setUser(response.data.user);\n      }\n    } catch (error) {\n      console.error(\"Auth check failed:\", error);\n      localStorage.removeItem(\"token\");\n      api.setAuthToken(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await api.post(\"/auth/login\", {\n        email,\n        password\n      });\n      const {\n        user,\n        token\n      } = response.data;\n      localStorage.setItem(\"token\", token);\n      api.setAuthToken(token);\n      setUser(user);\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed\";\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await api.post(\"/auth/register\", userData);\n      const {\n        user,\n        token\n      } = response.data;\n      localStorage.setItem(\"token\", token);\n      api.setAuthToken(token);\n      setUser(user);\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data, _error$response3, _error$response3$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Registration failed\";\n      const errors = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.errors) || [];\n      return {\n        success: false,\n        error: message,\n        errors\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    api.setAuthToken(null);\n    setUser(null);\n  };\n  const updateUser = updatedUser => {\n    setUser(updatedUser);\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n    checkAuthStatus\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","checkAuthStatus","token","localStorage","getItem","setAuthToken","response","get","data","error","console","removeItem","login","email","password","post","setItem","success","_error$response","_error$response$data","message","register","userData","_error$response2","_error$response2$data","_error$response3","_error$response3$data","errors","logout","updateUser","updatedUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bishnu/ayurvedic-blockchain/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport api from \"../services/api\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is logged in on app start\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        api.setAuthToken(token);\n        const response = await api.get(\"/users/profile\");\n        setUser(response.data.user);\n      }\n    } catch (error) {\n      console.error(\"Auth check failed:\", error);\n      localStorage.removeItem(\"token\");\n      api.setAuthToken(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const response = await api.post(\"/auth/login\", { email, password });\n      const { user, token } = response.data;\n\n      localStorage.setItem(\"token\", token);\n      api.setAuthToken(token);\n      setUser(user);\n\n      return { success: true, user };\n    } catch (error) {\n      const message = error.response?.data?.message || \"Login failed\";\n      return { success: false, error: message };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await api.post(\"/auth/register\", userData);\n      const { user, token } = response.data;\n\n      localStorage.setItem(\"token\", token);\n      api.setAuthToken(token);\n      setUser(user);\n\n      return { success: true, user };\n    } catch (error) {\n      const message = error.response?.data?.message || \"Registration failed\";\n      const errors = error.response?.data?.errors || [];\n      return { success: false, error: message, errors };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    api.setAuthToken(null);\n    setUser(null);\n  };\n\n  const updateUser = (updatedUser) => {\n    setUser(updatedUser);\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n    checkAuthStatus,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}